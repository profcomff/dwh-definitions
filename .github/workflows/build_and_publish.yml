name: Publish Python üêç distributions üì¶

on:
  push:
    branches: [ 'main' ]
    tags:
      - 'v*'

jobs:
  migrate_test:
    name: Migrate Test DB
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    environment:
      name: Testing
    env:
      DB_DSN: ${{ secrets.DB_DSN }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m ensurepip 
          pip install -r requirements.txt -r requirements.dev.txt
          pip install build --user 
          python -m build --wheel --sdist --outdir dist/
      - name: Migrate DB
        run: |
          alembic upgrade head

  migrate_prod:
    name: Migrate Production DB
    runs-on: ubuntu-latest
    needs: migrate_test
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      packages: write
    environment:
      name: Production
    env:
      DB_DSN: ${{ secrets.DB_DSN }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m ensurepip 
          pip install -r requirements.txt -r requirements.dev.txt
          pip install build --user 
          python -m build --wheel --sdist --outdir dist/
      - name: Migrate DB
        run: |
          alembic upgrade head

  build-and-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    needs: migrate_prod
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: Production
    env:
      TWINE_USERNAME: "__token__"
      TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      DB_DSN: ${{ secrets.DB_DSN }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m ensurepip 
          pip install build --user 
          python -m build --wheel --sdist --outdir dist/

      - name: build and upload wheel
        run: |
          python setup.py bdist_wheel --universal
          pip install twine
          twine upload dist/*
