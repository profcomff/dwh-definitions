"""rental-fix

Revision ID: 83a86d9e5c9b
Revises: 00dc9eb31a18
Create Date: 2025-04-29 23:14:06.433484

"""

import os

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '83a86d9e5c9b'
down_revision = '00dc9eb31a18'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('item', 'type', schema='DWH_RENTAL')
    op.alter_column(
        'encrypted_info',
        'email',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's email from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'phone_number',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's phone_number from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'vk_name',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's vk_name from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'city',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's city from ods uder info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'hometown',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's hometown from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'location',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's current city from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'github_name',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's github_name from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'telegram_name',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's telegram_name from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'home_phone_number',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's home_phone_number from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'education_level',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment='Bachelor/Master/Specialist from ods user info',
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'university',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's university from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'group',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's group from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'faculty',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's faculty from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'position',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's position in university from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'student_id_number',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's student_id_number from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'department',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's department in university from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'mode_of_study',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment='full-time/correspondence education from ods user info',
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'full_name',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's full_name from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'birth_date',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's birth_date from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'photo',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's photo(https://) from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'sex',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment='male/female from ods user info',
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'job',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's job from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'work_location',
        existing_type=postgresql.BYTEA(),
        type_=sa.String(),
        existing_comment="user's work_location from ods uder info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.drop_column('item', 'type', schema='ODS_RENTAL')
    op.add_column('event', sa.Column('id', sa.Integer(), nullable=False), schema='STG_RENTAL')
    op.drop_column('event', 'api_id', schema='STG_RENTAL')
    op.add_column('item', sa.Column('id', sa.Integer(), nullable=False), schema='STG_RENTAL')
    op.drop_column('item', 'type', schema='STG_RENTAL')
    op.drop_column('item', 'api_id', schema='STG_RENTAL')
    op.add_column('item_type', sa.Column('id', sa.Integer(), nullable=False), schema='STG_RENTAL')
    op.drop_column('item_type', 'api_id', schema='STG_RENTAL')
    op.add_column('rental_session', sa.Column('id', sa.Integer(), nullable=False), schema='STG_RENTAL')
    op.drop_column('rental_session', 'api_id', schema='STG_RENTAL')
    op.add_column('strike', sa.Column('id', sa.Integer(), nullable=False), schema='STG_RENTAL')
    op.drop_column('strike', 'api_id', schema='STG_RENTAL')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('strike', sa.Column('api_id', sa.INTEGER(), autoincrement=True, nullable=False), schema='STG_RENTAL')
    op.drop_column('strike', 'id', schema='STG_RENTAL')
    op.add_column(
        'rental_session', sa.Column('api_id', sa.INTEGER(), autoincrement=True, nullable=False), schema='STG_RENTAL'
    )
    op.drop_column('rental_session', 'id', schema='STG_RENTAL')
    op.add_column(
        'item_type', sa.Column('api_id', sa.INTEGER(), autoincrement=True, nullable=False), schema='STG_RENTAL'
    )
    op.drop_column('item_type', 'id', schema='STG_RENTAL')
    op.add_column('item', sa.Column('api_id', sa.INTEGER(), autoincrement=True, nullable=False), schema='STG_RENTAL')
    op.add_column('item', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False), schema='STG_RENTAL')
    op.drop_column('item', 'id', schema='STG_RENTAL')
    op.add_column('event', sa.Column('api_id', sa.INTEGER(), autoincrement=True, nullable=False), schema='STG_RENTAL')
    op.drop_column('event', 'id', schema='STG_RENTAL')
    op.add_column(
        'item',
        sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False, comment='Тип вещи'),
        schema='ODS_RENTAL',
    )
    op.alter_column(
        'encrypted_info',
        'work_location',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's work_location from ods uder info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'job',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's job from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'sex',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment='male/female from ods user info',
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'photo',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's photo(https://) from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'birth_date',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's birth_date from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'full_name',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's full_name from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'mode_of_study',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment='full-time/correspondence education from ods user info',
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'department',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's department in university from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'student_id_number',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's student_id_number from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'position',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's position in university from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'faculty',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's faculty from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'group',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's group from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'university',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's university from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'education_level',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment='Bachelor/Master/Specialist from ods user info',
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'home_phone_number',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's home_phone_number from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'telegram_name',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's telegram_name from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'github_name',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's github_name from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'location',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's current city from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'hometown',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's hometown from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'city',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's city from ods uder info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'vk_name',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's vk_name from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'phone_number',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's phone_number from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.alter_column(
        'encrypted_info',
        'email',
        existing_type=sa.String(),
        type_=postgresql.BYTEA(),
        existing_comment="user's email from ods user info",
        existing_nullable=True,
        schema='DWH_USER_INFO',
    )
    op.add_column(
        'item',
        sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False, comment='Тип вещи'),
        schema='DWH_RENTAL',
    )
    # ### end Alembic commands ###
