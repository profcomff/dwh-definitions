"""nullable_fix

Revision ID: 461d89fc62a7
Revises: de9ebdfcc38f
Create Date: 2024-05-04 19:38:00.364333

"""

from alembic import op
import sqlalchemy as sa
import os
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '461d89fc62a7'
down_revision = 'de9ebdfcc38f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('achievement', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_ACHIEVEMENT')
    op.alter_column('achievement', 'description', existing_type=sa.VARCHAR(), nullable=True, schema='STG_ACHIEVEMENT')
    op.alter_column('achievement', 'picture', existing_type=sa.VARCHAR(), nullable=True, schema='STG_ACHIEVEMENT')
    op.alter_column('achievement', 'owner_user_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_ACHIEVEMENT')
    op.alter_column(
        'achievement', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_ACHIEVEMENT'
    )
    op.alter_column(
        'achievement', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_ACHIEVEMENT'
    )
    op.alter_column(
        'achievement_receiver', 'user_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_ACHIEVEMENT'
    )
    op.alter_column(
        'achievement_receiver', 'achievement_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_ACHIEVEMENT'
    )
    op.alter_column(
        'achievement_receiver',
        'create_ts',
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
        schema='STG_ACHIEVEMENT',
    )
    op.alter_column(
        'achievement_receiver',
        'update_ts',
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
        schema='STG_ACHIEVEMENT',
    )
    op.alter_column('auth_method', 'user_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH')
    op.alter_column('auth_method', 'auth_method', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column('auth_method', 'param', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column('auth_method', 'value', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column('auth_method', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH')
    op.alter_column('auth_method', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH')
    op.alter_column('auth_method', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_AUTH')
    op.alter_column(
        'dynamic_option', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH'
    )
    op.alter_column('dynamic_option', 'value_integer', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH')
    op.alter_column('dynamic_option', 'value_string', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column(
        'dynamic_option',
        'value_double',
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
        schema='STG_AUTH',
    )
    op.alter_column(
        'dynamic_option', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH'
    )
    op.alter_column('dynamic_option', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column('group', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column('group', 'parent_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH')
    op.alter_column('group', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH')
    op.alter_column('group', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH')
    op.alter_column('group', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_AUTH')
    op.alter_column('group_scope', 'group_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH')
    op.alter_column('group_scope', 'scope_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH')
    op.alter_column('group_scope', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_AUTH')
    op.alter_column('scope', 'creator_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH')
    op.alter_column('scope', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column('scope', 'comment', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column('scope', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_AUTH')
    op.alter_column('user', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_AUTH')
    op.alter_column('user', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH')
    op.alter_column('user', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH')
    op.alter_column('user_group', 'user_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH')
    op.alter_column('user_group', 'group_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH')
    op.alter_column('user_group', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_AUTH')
    op.alter_column(
        'user_message_delay', 'delay_time', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH'
    )
    op.alter_column('user_message_delay', 'user_email', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column('user_message_delay', 'user_ip', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column('user_session', 'session_name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column('user_session', 'user_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH')
    op.alter_column('user_session', 'expires', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH')
    op.alter_column('user_session', 'token', existing_type=sa.VARCHAR(), nullable=True, schema='STG_AUTH')
    op.alter_column(
        'user_session', 'last_activity', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH'
    )
    op.alter_column('user_session', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_AUTH')
    op.alter_column(
        'user_session_scope', 'user_session_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH'
    )
    op.alter_column('user_session_scope', 'scope_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_AUTH')
    op.alter_column('user_session_scope', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_AUTH')
    op.alter_column('fetcher', 'type', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PINGER')
    op.alter_column('fetcher', 'address', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PINGER')
    op.alter_column('fetcher', 'fetch_data', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PINGER')
    op.alter_column('fetcher', 'delay_ok', existing_type=sa.INTEGER(), nullable=True, schema='STG_PINGER')
    op.alter_column('fetcher', 'delay_fail', existing_type=sa.INTEGER(), nullable=True, schema='STG_PINGER')
    op.alter_column('fetcher', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_PINGER')
    op.alter_column('metric', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PINGER')
    op.alter_column('metric', 'ok', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_PINGER')
    op.alter_column(
        'metric', 'time_delta', existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=True, schema='STG_PINGER'
    )
    op.alter_column('receiver', 'url', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PINGER')
    op.alter_column('receiver', 'method', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PINGER')
    op.alter_column(
        'receiver',
        'receiver_body',
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
        schema='STG_PINGER',
    )
    op.alter_column('receiver', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_PINGER')
    op.alter_column('tg_user', 'surname', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PRINT')
    op.alter_column('tg_user', 'number', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PRINT')
    op.alter_column('union_member', 'surname', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PRINT')
    op.alter_column('union_member', 'union_number', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PRINT')
    op.alter_column('union_member', 'student_number', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PRINT')
    op.alter_column('vk_user', 'surname', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PRINT')
    op.alter_column('vk_user', 'number', existing_type=sa.VARCHAR(), nullable=True, schema='STG_PRINT')
    op.alter_column('raw_html', 'url', existing_type=sa.VARCHAR(length=256), nullable=True, schema='STG_RASPHYSMSU')
    op.alter_column('raw_html', 'raw_html', existing_type=sa.TEXT(), nullable=True, schema='STG_RASPHYSMSU')
    op.alter_column('raw_html_old', 'url', existing_type=sa.VARCHAR(length=256), nullable=True, schema='STG_RASPHYSMSU')
    op.alter_column('raw_html_old', 'raw_html', existing_type=sa.TEXT(), nullable=True, schema='STG_RASPHYSMSU')
    op.alter_column('button', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SERVICES')
    op.alter_column('button', 'order', existing_type=sa.INTEGER(), nullable=True, schema='STG_SERVICES')
    op.alter_column('button', 'category_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_SERVICES')
    op.alter_column('button', 'icon', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SERVICES')
    op.alter_column('button', 'link', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SERVICES')
    op.alter_column('button', 'type', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SERVICES')
    op.alter_column('category', 'order', existing_type=sa.INTEGER(), nullable=True, schema='STG_SERVICES')
    op.alter_column('category', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SERVICES')
    op.alter_column('category', 'type', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SERVICES')
    op.alter_column('scope', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SERVICES')
    op.alter_column('scope', 'category_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_SERVICES')
    op.alter_column('scope', 'button_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_SERVICES')
    op.alter_column('scope', 'is_required', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_SERVICES')
    op.alter_column(
        'create_group_request', 'valid_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_SOCIAL'
    )
    op.alter_column(
        'create_group_request', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_SOCIAL'
    )
    op.alter_column('create_group_request', 'owner_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_SOCIAL')
    op.alter_column(
        'create_group_request', 'mapped_group_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_SOCIAL'
    )
    op.alter_column(
        'create_group_request', 'secret_key', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SOCIAL'
    )
    op.alter_column('group', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('group', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('group', 'last_active_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('group', 'owner_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('group', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('group', 'type', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('telegram_channel', 'channel_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('telegram_chat', 'chat_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('vk_chat', 'peer_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('vk_group', 'group_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('vk_group', 'confirmation_token', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('vk_group', 'secret_key', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SOCIAL')
    op.alter_column('webhook_storage', 'system', existing_type=sa.VARCHAR(), nullable=True, schema='STG_SOCIAL')
    op.alter_column(
        'webhook_storage',
        'message',
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
        schema='STG_SOCIAL',
    )
    op.alter_column(
        'webhook_storage', 'event_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_SOCIAL'
    )
    op.alter_column('comment_event', 'event_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('comment_event', 'author_name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('comment_event', 'text', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column(
        'comment_event', 'approve_status', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_event', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_event', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column('comment_event', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column(
        'comment_lecturer', 'lecturer_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_lecturer', 'author_name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column('comment_lecturer', 'text', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column(
        'comment_lecturer', 'approve_status', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_lecturer', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_lecturer', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column('comment_lecturer', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('credentials', 'group', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('credentials', 'email', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column(
        'credentials',
        'scope',
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
        schema='STG_TIMETABLE',
    )
    op.alter_column(
        'credentials',
        'token',
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
        schema='STG_TIMETABLE',
    )
    op.alter_column(
        'credentials', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'credentials', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column('event', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('event', 'start_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('event', 'end_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('event', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('events_groups', 'event_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('events_groups', 'group_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('events_lecturers', 'event_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column(
        'events_lecturers', 'lecturer_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_TIMETABLE'
    )
    op.alter_column('events_rooms', 'event_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('events_rooms', 'room_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('group', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('group', 'number', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('group', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'first_name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'middle_name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'last_name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'avatar_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'description', existing_type=sa.TEXT(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('photo', 'lecturer_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('photo', 'link', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('photo', 'approve_status', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('photo', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('room', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('room', 'direction', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('room', 'building', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('room', 'building_url', existing_type=sa.VARCHAR(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column('room', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_TIMETABLE')
    op.alter_column(
        'union_member', 'type_of_learning', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'rzd_status', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'academic_level', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'status', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'faculty', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'first_name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'last_name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'email', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'date_of_birth', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER'
    )
    op.alter_column(
        'union_member', 'phone_number', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'image', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'rzd_datetime', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'rzd_number', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'grade_level', existing_type=sa.INTEGER(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'has_student_id', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'entry_date', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'status_gain_date', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'card_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'card_status', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'card_date', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'card_number', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'card_user', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'card', existing_type=sa.VARCHAR(), nullable=True, schema='STG_UNION_MEMBER')
    op.alter_column('category', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_USERDATA')
    op.alter_column('category', 'read_scope', existing_type=sa.VARCHAR(), nullable=True, schema='STG_USERDATA')
    op.alter_column('category', 'update_scope', existing_type=sa.VARCHAR(), nullable=True, schema='STG_USERDATA')
    op.alter_column('category', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_USERDATA')
    op.alter_column('category', 'modify_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_USERDATA')
    op.alter_column('category', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_USERDATA')
    op.alter_column('info', 'param_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_USERDATA')
    op.alter_column('info', 'source_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_USERDATA')
    op.alter_column('info', 'owner_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_USERDATA')
    op.alter_column('info', 'value', existing_type=sa.VARCHAR(), nullable=True, schema='STG_USERDATA')
    op.alter_column('info', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_USERDATA')
    op.alter_column('info', 'modify_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_USERDATA')
    op.alter_column('info', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_USERDATA')
    op.alter_column('param', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_USERDATA')
    op.alter_column('param', 'category_id', existing_type=sa.INTEGER(), nullable=True, schema='STG_USERDATA')
    op.alter_column('param', 'is_required', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_USERDATA')
    op.alter_column('param', 'changeable', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_USERDATA')
    op.alter_column('param', 'type', existing_type=sa.VARCHAR(), nullable=True, schema='STG_USERDATA')
    op.alter_column('param', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_USERDATA')
    op.alter_column('param', 'modify_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_USERDATA')
    op.alter_column('param', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_USERDATA')
    op.alter_column('source', 'name', existing_type=sa.VARCHAR(), nullable=True, schema='STG_USERDATA')
    op.alter_column('source', 'trust_level', existing_type=sa.INTEGER(), nullable=True, schema='STG_USERDATA')
    op.alter_column('source', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_USERDATA')
    op.alter_column('source', 'modify_ts', existing_type=postgresql.TIMESTAMP(), nullable=True, schema='STG_USERDATA')
    op.alter_column('source', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=True, schema='STG_USERDATA')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('source', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_USERDATA')
    op.alter_column('source', 'modify_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_USERDATA')
    op.alter_column('source', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_USERDATA')
    op.alter_column('source', 'trust_level', existing_type=sa.INTEGER(), nullable=False, schema='STG_USERDATA')
    op.alter_column('source', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_USERDATA')
    op.alter_column('param', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_USERDATA')
    op.alter_column('param', 'modify_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_USERDATA')
    op.alter_column('param', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_USERDATA')
    op.alter_column('param', 'type', existing_type=sa.VARCHAR(), nullable=False, schema='STG_USERDATA')
    op.alter_column('param', 'changeable', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_USERDATA')
    op.alter_column('param', 'is_required', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_USERDATA')
    op.alter_column('param', 'category_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_USERDATA')
    op.alter_column('param', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_USERDATA')
    op.alter_column('info', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_USERDATA')
    op.alter_column('info', 'modify_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_USERDATA')
    op.alter_column('info', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_USERDATA')
    op.alter_column('info', 'value', existing_type=sa.VARCHAR(), nullable=False, schema='STG_USERDATA')
    op.alter_column('info', 'owner_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_USERDATA')
    op.alter_column('info', 'source_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_USERDATA')
    op.alter_column('info', 'param_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_USERDATA')
    op.alter_column('category', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_USERDATA')
    op.alter_column(
        'category', 'modify_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_USERDATA'
    )
    op.alter_column(
        'category', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_USERDATA'
    )
    op.alter_column('category', 'update_scope', existing_type=sa.VARCHAR(), nullable=False, schema='STG_USERDATA')
    op.alter_column('category', 'read_scope', existing_type=sa.VARCHAR(), nullable=False, schema='STG_USERDATA')
    op.alter_column('category', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_USERDATA')
    op.alter_column('union_member', 'card', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'card_user', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'card_number', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'card_date', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'card_status', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'card_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'status_gain_date', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'entry_date', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'has_student_id', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_UNION_MEMBER'
    )
    op.alter_column(
        'union_member', 'grade_level', existing_type=sa.INTEGER(), nullable=False, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'rzd_number', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'rzd_datetime', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'image', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'phone_number', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER'
    )
    op.alter_column(
        'union_member', 'date_of_birth', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'email', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'last_name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'first_name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'faculty', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column('union_member', 'status', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'academic_level', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER'
    )
    op.alter_column('union_member', 'rzd_status', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER')
    op.alter_column(
        'union_member', 'type_of_learning', existing_type=sa.VARCHAR(), nullable=False, schema='STG_UNION_MEMBER'
    )
    op.alter_column('room', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('room', 'building_url', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('room', 'building', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('room', 'direction', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('room', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('photo', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('photo', 'approve_status', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('photo', 'link', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('photo', 'lecturer_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'description', existing_type=sa.TEXT(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'avatar_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'last_name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'middle_name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('lecturer', 'first_name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('group', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('group', 'number', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('group', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('events_rooms', 'room_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('events_rooms', 'event_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column(
        'events_lecturers', 'lecturer_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column('events_lecturers', 'event_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('events_groups', 'group_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('events_groups', 'event_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('event', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('event', 'end_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('event', 'start_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('event', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column(
        'credentials', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'credentials', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'credentials',
        'token',
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
        schema='STG_TIMETABLE',
    )
    op.alter_column(
        'credentials',
        'scope',
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
        schema='STG_TIMETABLE',
    )
    op.alter_column('credentials', 'email', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('credentials', 'group', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column(
        'comment_lecturer', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_lecturer', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_lecturer', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_lecturer', 'approve_status', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column('comment_lecturer', 'text', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column(
        'comment_lecturer', 'author_name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_lecturer', 'lecturer_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column('comment_event', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column(
        'comment_event', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_event', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column(
        'comment_event', 'approve_status', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE'
    )
    op.alter_column('comment_event', 'text', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('comment_event', 'author_name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column('comment_event', 'event_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_TIMETABLE')
    op.alter_column(
        'webhook_storage', 'event_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_SOCIAL'
    )
    op.alter_column(
        'webhook_storage',
        'message',
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
        schema='STG_SOCIAL',
    )
    op.alter_column('webhook_storage', 'system', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SOCIAL')
    op.alter_column('vk_group', 'secret_key', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SOCIAL')
    op.alter_column('vk_group', 'confirmation_token', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SOCIAL')
    op.alter_column('vk_group', 'group_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_SOCIAL')
    op.alter_column('vk_chat', 'peer_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_SOCIAL')
    op.alter_column('telegram_chat', 'chat_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_SOCIAL')
    op.alter_column('telegram_channel', 'channel_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_SOCIAL')
    op.alter_column('group', 'type', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SOCIAL')
    op.alter_column('group', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_SOCIAL')
    op.alter_column('group', 'owner_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_SOCIAL')
    op.alter_column(
        'group', 'last_active_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_SOCIAL'
    )
    op.alter_column('group', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_SOCIAL')
    op.alter_column('group', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_SOCIAL')
    op.alter_column(
        'create_group_request', 'secret_key', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SOCIAL'
    )
    op.alter_column(
        'create_group_request', 'mapped_group_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_SOCIAL'
    )
    op.alter_column('create_group_request', 'owner_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_SOCIAL')
    op.alter_column(
        'create_group_request', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_SOCIAL'
    )
    op.alter_column(
        'create_group_request', 'valid_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_SOCIAL'
    )
    op.alter_column('scope', 'is_required', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_SERVICES')
    op.alter_column('scope', 'button_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_SERVICES')
    op.alter_column('scope', 'category_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_SERVICES')
    op.alter_column('scope', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SERVICES')
    op.alter_column('category', 'type', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SERVICES')
    op.alter_column('category', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SERVICES')
    op.alter_column('category', 'order', existing_type=sa.INTEGER(), nullable=False, schema='STG_SERVICES')
    op.alter_column('button', 'type', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SERVICES')
    op.alter_column('button', 'link', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SERVICES')
    op.alter_column('button', 'icon', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SERVICES')
    op.alter_column('button', 'category_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_SERVICES')
    op.alter_column('button', 'order', existing_type=sa.INTEGER(), nullable=False, schema='STG_SERVICES')
    op.alter_column('button', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_SERVICES')
    op.alter_column('raw_html_old', 'raw_html', existing_type=sa.TEXT(), nullable=False, schema='STG_RASPHYSMSU')
    op.alter_column(
        'raw_html_old', 'url', existing_type=sa.VARCHAR(length=256), nullable=False, schema='STG_RASPHYSMSU'
    )
    op.alter_column('raw_html', 'raw_html', existing_type=sa.TEXT(), nullable=False, schema='STG_RASPHYSMSU')
    op.alter_column('raw_html', 'url', existing_type=sa.VARCHAR(length=256), nullable=False, schema='STG_RASPHYSMSU')
    op.alter_column('vk_user', 'number', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PRINT')
    op.alter_column('vk_user', 'surname', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PRINT')
    op.alter_column('union_member', 'student_number', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PRINT')
    op.alter_column('union_member', 'union_number', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PRINT')
    op.alter_column('union_member', 'surname', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PRINT')
    op.alter_column('tg_user', 'number', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PRINT')
    op.alter_column('tg_user', 'surname', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PRINT')
    op.alter_column('receiver', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_PINGER')
    op.alter_column(
        'receiver',
        'receiver_body',
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
        schema='STG_PINGER',
    )
    op.alter_column('receiver', 'method', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PINGER')
    op.alter_column('receiver', 'url', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PINGER')
    op.alter_column(
        'metric', 'time_delta', existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=False, schema='STG_PINGER'
    )
    op.alter_column('metric', 'ok', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_PINGER')
    op.alter_column('metric', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PINGER')
    op.alter_column('fetcher', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_PINGER')
    op.alter_column('fetcher', 'delay_fail', existing_type=sa.INTEGER(), nullable=False, schema='STG_PINGER')
    op.alter_column('fetcher', 'delay_ok', existing_type=sa.INTEGER(), nullable=False, schema='STG_PINGER')
    op.alter_column('fetcher', 'fetch_data', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PINGER')
    op.alter_column('fetcher', 'address', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PINGER')
    op.alter_column('fetcher', 'type', existing_type=sa.VARCHAR(), nullable=False, schema='STG_PINGER')
    op.alter_column('user_session_scope', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_AUTH')
    op.alter_column('user_session_scope', 'scope_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH')
    op.alter_column(
        'user_session_scope', 'user_session_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH'
    )
    op.alter_column(
        'user_session', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH'
    )
    op.alter_column(
        'user_session', 'last_activity', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH'
    )
    op.alter_column('user_session', 'token', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column('user_session', 'expires', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH')
    op.alter_column('user_session', 'user_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH')
    op.alter_column('user_session', 'session_name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column('user_message_delay', 'user_ip', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column('user_message_delay', 'user_email', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column(
        'user_message_delay', 'delay_time', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH'
    )
    op.alter_column('user_group', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_AUTH')
    op.alter_column('user_group', 'group_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH')
    op.alter_column('user_group', 'user_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH')
    op.alter_column('user', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH')
    op.alter_column('user', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH')
    op.alter_column('user', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_AUTH')
    op.alter_column('scope', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_AUTH')
    op.alter_column('scope', 'comment', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column('scope', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column('scope', 'creator_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH')
    op.alter_column('group_scope', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_AUTH')
    op.alter_column('group_scope', 'scope_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH')
    op.alter_column('group_scope', 'group_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH')
    op.alter_column('group', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_AUTH')
    op.alter_column('group', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH')
    op.alter_column('group', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH')
    op.alter_column('group', 'parent_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH')
    op.alter_column('group', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column('dynamic_option', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column(
        'dynamic_option', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH'
    )
    op.alter_column(
        'dynamic_option',
        'value_double',
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
        schema='STG_AUTH',
    )
    op.alter_column('dynamic_option', 'value_string', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column('dynamic_option', 'value_integer', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH')
    op.alter_column(
        'dynamic_option', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH'
    )
    op.alter_column('auth_method', 'is_deleted', existing_type=sa.BOOLEAN(), nullable=False, schema='STG_AUTH')
    op.alter_column('auth_method', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH')
    op.alter_column('auth_method', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_AUTH')
    op.alter_column('auth_method', 'value', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column('auth_method', 'param', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column('auth_method', 'auth_method', existing_type=sa.VARCHAR(), nullable=False, schema='STG_AUTH')
    op.alter_column('auth_method', 'user_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_AUTH')
    op.alter_column(
        'achievement_receiver',
        'update_ts',
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
        schema='STG_ACHIEVEMENT',
    )
    op.alter_column(
        'achievement_receiver',
        'create_ts',
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
        schema='STG_ACHIEVEMENT',
    )
    op.alter_column(
        'achievement_receiver', 'achievement_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_ACHIEVEMENT'
    )
    op.alter_column(
        'achievement_receiver', 'user_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_ACHIEVEMENT'
    )
    op.alter_column(
        'achievement', 'update_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_ACHIEVEMENT'
    )
    op.alter_column(
        'achievement', 'create_ts', existing_type=postgresql.TIMESTAMP(), nullable=False, schema='STG_ACHIEVEMENT'
    )
    op.alter_column(
        'achievement', 'owner_user_id', existing_type=sa.INTEGER(), nullable=False, schema='STG_ACHIEVEMENT'
    )
    op.alter_column('achievement', 'picture', existing_type=sa.VARCHAR(), nullable=False, schema='STG_ACHIEVEMENT')
    op.alter_column('achievement', 'description', existing_type=sa.VARCHAR(), nullable=False, schema='STG_ACHIEVEMENT')
    op.alter_column('achievement', 'name', existing_type=sa.VARCHAR(), nullable=False, schema='STG_ACHIEVEMENT')
    # ### end Alembic commands ###
