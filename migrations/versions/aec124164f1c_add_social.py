"""add social

Revision ID: aec124164f1c
Revises: fa6331fe4c72
Create Date: 2023-09-01 18:24:07.379616

"""
from alembic import op
import sqlalchemy as sa
import os


# revision identifiers, used by Alembic.
revision = 'aec124164f1c'
down_revision = 'fa6331fe4c72'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_schema("TESTS_DATABASE")
    op.create_table(
        'test', sa.Column('id', sa.Integer(), nullable=False), sa.PrimaryKeyConstraint('id'), schema='TESTS_DATABASE'
    )
    op.create_group(
        "test_dwh_tests_database_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_read"
    )
    op.create_group(
        "test_dwh_tests_database_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_write"
    )
    op.create_group(
        "test_dwh_tests_database_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_all"
    )
    op.grant_on_schema(
        "test_dwh_tests_database_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_read",
        "TESTS_DATABASE",
    )
    op.grant_on_schema(
        "test_dwh_tests_database_write"
        if os.getenv("ENVIRONMENT") != "production"
        else "prod_dwh_tests_database_write",
        "TESTS_DATABASE",
    )
    op.grant_on_schema(
        "test_dwh_tests_database_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_all",
        "TESTS_DATABASE",
    )
    op.grant_on_table(
        "test_dwh_tests_database_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_read",
        ['SELECT'],
        '"TESTS_DATABASE".test',
    )
    op.grant_on_table(
        "test_dwh_tests_database_write"
        if os.getenv("ENVIRONMENT") != "production"
        else "prod_dwh_tests_database_write",
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"TESTS_DATABASE".test',
    )
    op.grant_on_table(
        "test_dwh_tests_database_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_all",
        ['ALL'],
        '"TESTS_DATABASE".test',
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.revoke_on_table(
        "test_dwh_tests_database_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_all",
        ['ALL'],
        '"TESTS_DATABASE".test',
    )
    op.revoke_on_table(
        "test_dwh_tests_database_write"
        if os.getenv("ENVIRONMENT") != "production"
        else "prod_dwh_tests_database_write",
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"TESTS_DATABASE".test',
    )
    op.revoke_on_table(
        "test_dwh_tests_database_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_read",
        ['SELECT'],
        '"TESTS_DATABASE".test',
    )
    op.revoke_on_schema(
        "test_dwh_tests_database_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_all",
        "TESTS_DATABASE",
    )
    op.revoke_on_schema(
        "test_dwh_tests_database_write"
        if os.getenv("ENVIRONMENT") != "production"
        else "prod_dwh_tests_database_write",
        "TESTS_DATABASE",
    )
    op.revoke_on_schema(
        "test_dwh_tests_database_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_read",
        "TESTS_DATABASE",
    )
    op.drop_table('test', schema='TESTS_DATABASE')
    op.delete_group(
        "test_dwh_tests_database_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_all"
    )
    op.delete_group(
        "test_dwh_tests_database_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_write"
    )
    op.delete_group(
        "test_dwh_tests_database_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_tests_database_read"
    )
    op.drop_table_schema("TESTS_DATABASE")
    # ### end Alembic commands ###
