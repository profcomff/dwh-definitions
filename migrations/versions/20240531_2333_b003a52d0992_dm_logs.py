"""dm_logs

Revision ID: b003a52d0992
Revises: 7a18bd9ff633
Create Date: 2024-05-31 23:33:27.403140

"""

import os

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = 'b003a52d0992'
down_revision = '7a18bd9ff633'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_schema("ODS_TIMETABLE")
    op.create_table(
        'incident',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column(
            'container_name', sa.String(), nullable=False, comment='Имя контейнера, в котором произошла ошибочка'
        ),
        sa.Column('message', sa.String(), nullable=False, comment='Сообщение об ошибке'),
        sa.Column('create_ts', sa.DateTime(), nullable=False, comment='Время, когда произошла ошибка'),
        sa.PrimaryKeyConstraint('id'),
        schema='DM_INFRA_LOGS',
        comment='Информация об ошибках по контейнерам',
    )
    op.create_table(
        'ods_timetable_act',
        sa.Column('event_text', sa.String(), nullable=True),
        sa.Column('time_interval_text', sa.String(), nullable=True),
        sa.Column('group_text', sa.String(), nullable=True),
        schema='ODS_TIMETABLE',
    )
    op.create_group(
        "test_dwh_ods_timetable_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_read"
    )
    op.create_group(
        "test_dwh_ods_timetable_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_write"
    )
    op.create_group(
        "test_dwh_ods_timetable_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_all"
    )
    op.grant_on_schema(
        "test_dwh_ods_timetable_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_read",
        "ODS_TIMETABLE",
    )
    op.grant_on_schema(
        "test_dwh_ods_timetable_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_write",
        "ODS_TIMETABLE",
    )
    op.grant_on_schema(
        "test_dwh_ods_timetable_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_all",
        "ODS_TIMETABLE",
    )
    op.grant_on_table(
        "test_dwh_ods_timetable_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_read",
        ['SELECT'],
        '"ODS_TIMETABLE".ods_timetable_act',
    )
    op.grant_on_table(
        "test_dwh_ods_timetable_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_write",
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"ODS_TIMETABLE".ods_timetable_act',
    )
    op.grant_on_table(
        "test_dwh_ods_timetable_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_all",
        ['ALL'],
        '"ODS_TIMETABLE".ods_timetable_act',
    )
    op.grant_on_table(
        "test_dwh_dm_infra_logs_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_dm_infra_logs_read",
        ['read'],
        '"DM_INFRA_LOGS".incident',
    )
    op.grant_on_table(
        "test_dwh_dm_infra_logs_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_dm_infra_logs_write",
        ['write'],
        '"DM_INFRA_LOGS".incident',
    )
    op.grant_on_table(
        "test_dwh_dm_infra_logs_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_dm_infra_logs_all",
        ['all'],
        '"DM_INFRA_LOGS".incident',
    )
    op.create_index(
        op.f('ix_ODS_TIMETABLE_ods_timetable_act_event_text'),
        'ods_timetable_act',
        ['event_text'],
        unique=False,
        schema='ODS_TIMETABLE',
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.revoke_on_table(
        "test_dwh_dm_infra_logs_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_dm_infra_logs_all",
        ['all'],
        '"DM_INFRA_LOGS".incident',
    )
    op.revoke_on_table(
        "test_dwh_dm_infra_logs_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_dm_infra_logs_write",
        ['write'],
        '"DM_INFRA_LOGS".incident',
    )
    op.revoke_on_table(
        "test_dwh_dm_infra_logs_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_dm_infra_logs_read",
        ['read'],
        '"DM_INFRA_LOGS".incident',
    )
    op.revoke_on_table(
        "test_dwh_ods_timetable_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_all",
        ['ALL'],
        '"ODS_TIMETABLE".ods_timetable_act',
    )
    op.revoke_on_table(
        "test_dwh_ods_timetable_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_write",
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"ODS_TIMETABLE".ods_timetable_act',
    )
    op.revoke_on_table(
        "test_dwh_ods_timetable_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_read",
        ['SELECT'],
        '"ODS_TIMETABLE".ods_timetable_act',
    )
    op.revoke_on_schema(
        "test_dwh_ods_timetable_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_all",
        "ODS_TIMETABLE",
    )
    op.revoke_on_schema(
        "test_dwh_ods_timetable_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_write",
        "ODS_TIMETABLE",
    )
    op.revoke_on_schema(
        "test_dwh_ods_timetable_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_read",
        "ODS_TIMETABLE",
    )
    op.drop_table('ods_timetable_act', schema='ODS_TIMETABLE')
    op.drop_table('incident', schema='DM_INFRA_LOGS')
    op.delete_group(
        "test_dwh_ods_timetable_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_all"
    )
    op.delete_group(
        "test_dwh_ods_timetable_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_write"
    )
    op.delete_group(
        "test_dwh_ods_timetable_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_timetable_read"
    )
    op.drop_table_schema("ODS_TIMETABLE")
    op.drop_index(
        op.f('ix_ODS_TIMETABLE_ods_timetable_act_event_text'), table_name='ods_timetable_act', schema='ODS_TIMETABLE'
    )
    # ### end Alembic commands ###
