"""add_link_full_schema3

Revision ID: 11461790578a
Revises: da280c5f1dac
Create Date: 2024-08-30 19:02:34.621922

"""

from alembic import op
import sqlalchemy as sa
import os
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '11461790578a'
down_revision = 'da280c5f1dac'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.revoke_on_table(
        "test_dwh_stg_rasphysmsu_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_stg_rasphysmsu_read",
        ['SELECT'],
        '"STG_RASPHYSMSU".new_with_dates',
    )
    op.revoke_on_table(
        (
            "test_dwh_stg_rasphysmsu_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_rasphysmsu_write"
        ),
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"STG_RASPHYSMSU".new_with_dates',
    )
    op.revoke_on_table(
        "test_dwh_stg_rasphysmsu_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_stg_rasphysmsu_all",
        ['ALL'],
        '"STG_RASPHYSMSU".new_with_dates',
    )
    op.revoke_on_table(
        "test_dwh_stg_rasphysmsu_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_stg_rasphysmsu_read",
        ['SELECT'],
        '"STG_RASPHYSMSU".link_new_with_dates',
    )
    op.revoke_on_table(
        (
            "test_dwh_stg_rasphysmsu_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_rasphysmsu_write"
        ),
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"STG_RASPHYSMSU".link_new_with_dates',
    )
    op.revoke_on_table(
        "test_dwh_stg_rasphysmsu_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_stg_rasphysmsu_all",
        ['ALL'],
        '"STG_RASPHYSMSU".link_new_with_dates',
    )
    op.drop_table('new_with_dates', schema='STG_RASPHYSMSU')
    op.drop_table('link_new_with_dates', schema='STG_RASPHYSMSU')


def downgrade():
    op.create_table(
        'link_new_with_dates',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('subject', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('start', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('end', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('odd', sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column('even', sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column('weekday', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('num', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('place', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
        sa.Column('group', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
        sa.Column('teacher', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
        sa.Column('events_id', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='link_new_with_dates_pkey'),
        schema='STG_RASPHYSMSU',
    )
    op.create_table(
        'new_with_dates',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('subject', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('odd', sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column('even', sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column('weekday', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('num', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('start', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('end', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('place', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
        sa.Column('group', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
        sa.Column('teacher', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
        sa.Column('events_id', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='new_with_dates_pkey'),
        schema='STG_RASPHYSMSU',
    )
    op.grant_on_table(
        "test_dwh_stg_rasphysmsu_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_stg_rasphysmsu_all",
        ['ALL'],
        '"STG_RASPHYSMSU".link_new_with_dates',
    )
    op.grant_on_table(
        (
            "test_dwh_stg_rasphysmsu_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_rasphysmsu_write"
        ),
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"STG_RASPHYSMSU".link_new_with_dates',
    )
    op.grant_on_table(
        "test_dwh_stg_rasphysmsu_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_stg_rasphysmsu_read",
        ['SELECT'],
        '"STG_RASPHYSMSU".link_new_with_dates',
    )
    op.grant_on_table(
        "test_dwh_stg_rasphysmsu_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_stg_rasphysmsu_all",
        ['ALL'],
        '"STG_RASPHYSMSU".new_with_dates',
    )
    op.grant_on_table(
        (
            "test_dwh_stg_rasphysmsu_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_rasphysmsu_write"
        ),
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"STG_RASPHYSMSU".new_with_dates',
    )
    op.grant_on_table(
        "test_dwh_stg_rasphysmsu_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_stg_rasphysmsu_read",
        ['SELECT'],
        '"STG_RASPHYSMSU".new_with_dates',
    )
