"""ODS_USER.info

Revision ID: b9023536db5b
Revises: 45b2b6c9d08c
Create Date: 2024-11-21 22:09:43.469417

"""

import os

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = 'b9023536db5b'
down_revision = '45b2b6c9d08c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_schema("ODS_USER")
    op.create_table(
        'info',
        sa.Column('id', sa.Integer(), nullable=False, comment='primary key'),
        sa.Column('email', sa.String(), nullable=True, comment="user's email from stg userdata"),
        sa.Column('phone_number', sa.String(), nullable=True, comment="user's phone_number from stg userdata"),
        sa.Column('vk_name', sa.String(), nullable=True, comment="user's vk_name from stg userdata"),
        sa.Column('city', sa.String(), nullable=True, comment="user's city from stg userdata"),
        sa.Column('hometown', sa.String(), nullable=True, comment="user's hometown from stg userdata"),
        sa.Column('location', sa.String(), nullable=True, comment="user's current city from stg userdata"),
        sa.Column('github_name', sa.String(), nullable=True, comment="user's github_name from stg userdata"),
        sa.Column('telegram_name', sa.String(), nullable=True, comment="user's telegram_name stg userdata"),
        sa.Column(
            'home_phone_number', sa.String(), nullable=True, comment="user's home_phone_number from stg userdata"
        ),
        sa.Column(
            'education_level', sa.String(), nullable=True, comment='Bachelor/Master/Specialist from stg userdata'
        ),
        sa.Column('university', sa.String(), nullable=True, comment="user's university from stg userdata"),
        sa.Column('group', sa.String(), nullable=True, comment="user's group from stg userdata"),
        sa.Column('faculty', sa.String(), nullable=True, comment="user's faculty from stg userdata"),
        sa.Column('position', sa.String(), nullable=True, comment="user's position in university from stg userdata"),
        sa.Column(
            'student_id_number', sa.String(), nullable=True, comment="user's student_id_number from stg userdata"
        ),
        sa.Column(
            'department', sa.String(), nullable=True, comment="user's department in university from stg userdata"
        ),
        sa.Column(
            'mode_of_study', sa.String(), nullable=True, comment='full-time/correspondence education from stg userdata'
        ),
        sa.Column('full_name', sa.String(), nullable=True, comment="user's full_name from stg userdata"),
        sa.Column('birth_date', sa.String(), nullable=True, comment="user's birth_date from stg userdata"),
        sa.Column('photo', sa.String(), nullable=True, comment="user's photo(https://) from stg userdata"),
        sa.Column('sex', sa.String(), nullable=True, comment='male/female from stg userdata'),
        sa.Column('job', sa.String(), nullable=True, comment="user's job from stg userdata"),
        sa.Column('work_location', sa.String(), nullable=True, comment="user's work_location from stg userdata"),
        sa.Column(
            'is_deleted', sa.Boolean(), nullable=True, comment='If True, user was deleted in backend. Default=False'
        ),
        sa.PrimaryKeyConstraint('id'),
        schema='ODS_USER',
    )
    op.create_group("test_dwh_ods_user_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_read")
    op.create_group(
        "test_dwh_ods_user_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_write"
    )
    op.create_group("test_dwh_ods_user_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_all")
    op.grant_on_schema(
        "test_dwh_ods_user_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_read", "ODS_USER"
    )
    op.grant_on_schema(
        "test_dwh_ods_user_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_write", "ODS_USER"
    )
    op.grant_on_schema(
        "test_dwh_ods_user_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_all", "ODS_USER"
    )
    op.grant_on_table(
        "test_dwh_ods_user_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_read",
        ['SELECT'],
        '"ODS_USER".info',
    )
    op.grant_on_table(
        "test_dwh_ods_user_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_write",
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"ODS_USER".info',
    )
    op.grant_on_table(
        "test_dwh_ods_user_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_all",
        ['ALL'],
        '"ODS_USER".info',
    )
    op.create_index(op.f('ix_ODS_USER_info_id'), 'info', ['id'], unique=False, schema='ODS_USER')
    op.grant_on_table(
        "test_dwh_ods_user_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_read",
        ['SELECT'],
        '"ODS_USER".info',
    )
    op.grant_on_table(
        "test_dwh_ods_user_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_write",
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"ODS_USER".info',
    )
    op.grant_on_table(
        "test_dwh_ods_user_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_all",
        ['ALL'],
        '"ODS_USER".info',
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.revoke_on_table(
        "test_dwh_ods_user_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_all",
        ['ALL'],
        '"ODS_USER".info',
    )
    op.revoke_on_table(
        "test_dwh_ods_user_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_write",
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"ODS_USER".info',
    )
    op.revoke_on_table(
        "test_dwh_ods_user_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_read",
        ['SELECT'],
        '"ODS_USER".info',
    )
    op.drop_index(op.f('ix_ODS_USER_info_id'), table_name='info', schema='ODS_USER')
    op.revoke_on_table(
        "test_dwh_ods_user_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_all",
        ['ALL'],
        '"ODS_USER".info',
    )
    op.revoke_on_table(
        "test_dwh_ods_user_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_write",
        ['SELECT', 'UPDATE', 'DELETE', 'TRUNCATE', 'INSERT'],
        '"ODS_USER".info',
    )
    op.revoke_on_table(
        "test_dwh_ods_user_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_read",
        ['SELECT'],
        '"ODS_USER".info',
    )
    op.revoke_on_schema(
        "test_dwh_ods_user_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_all", "ODS_USER"
    )
    op.revoke_on_schema(
        "test_dwh_ods_user_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_write", "ODS_USER"
    )
    op.revoke_on_schema(
        "test_dwh_ods_user_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_read", "ODS_USER"
    )
    op.drop_table('info', schema='ODS_USER')
    op.delete_group("test_dwh_ods_user_all" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_all")
    op.delete_group(
        "test_dwh_ods_user_write" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_write"
    )
    op.delete_group("test_dwh_ods_user_read" if os.getenv("ENVIRONMENT") != "production" else "prod_dwh_ods_user_read")
    op.drop_table_schema("ODS_USER")
    # ### end Alembic commands ###
